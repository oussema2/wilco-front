// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostDetail @isCommenting when the view is not sending the comment renders the screen loader 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={false}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
          <HorizontalPadding
            padding={20}
            style={null}
            testID="horizontalPadding-component"
          >
            <Title
              required={false}
              rightAction={[Function]}
              rightText={null}
              style={Object {}}
              testID="commentsTitle-component"
              text="Comments"
              textTransform="capitalize"
            />
          </HorizontalPadding>
        </View>
      }
      data={
        Array [
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 1,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 1,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 2,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev1",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 1,
                "intercom_android_hasheable": "user-1intercom-android-hash",
                "intercom_ios_hasheable": "user-1-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 1,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "ROLE 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "ROLE 2",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 1",
          },
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 2,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 3,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 4,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 5,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 6,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev2",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 2,
                "intercom_android_hasheable": "user-2intercom-android-hash",
                "intercom_ios_hasheable": "user-2-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 3,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 7,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 8,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "ROLE 3",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "ROLE 4",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 2",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="commentsTitle-component"
                >
                  Comments
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 1
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 2
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail @isCommenting when the view is sending the comment renders the screen loader 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={false}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
          <HorizontalPadding
            padding={20}
            style={null}
            testID="horizontalPadding-component"
          >
            <Title
              required={false}
              rightAction={[Function]}
              rightText={null}
              style={Object {}}
              testID="commentsTitle-component"
              text="Comments"
              textTransform="capitalize"
            />
          </HorizontalPadding>
        </View>
      }
      data={
        Array [
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 1,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 1,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 2,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev1",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 1,
                "intercom_android_hasheable": "user-1intercom-android-hash",
                "intercom_ios_hasheable": "user-1-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 1,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "ROLE 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "ROLE 2",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 1",
          },
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 2,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 3,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 4,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 5,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 6,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev2",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 2,
                "intercom_android_hasheable": "user-2intercom-android-hash",
                "intercom_ios_hasheable": "user-2-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 3,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 7,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 8,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "ROLE 3",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "ROLE 4",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 2",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="commentsTitle-component"
                >
                  Comments
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 1
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 2
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.6)",
        "display": "flex",
        "flexDirection": "column-reverse",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="screenLoader"
  >
    <View
      animated={true}
      animationConfig={
        Object {
          "bounciness": 0,
        }
      }
      animationType="spring"
      indeterminate={true}
      indeterminateAnimationDuration={1000}
      onLayout={[Function]}
      progress={0}
      style={
        Array [
          Object {
            "backgroundColor": undefined,
            "borderColor": "#12A3BE",
            "borderRadius": 0,
            "borderWidth": 0,
            "overflow": "hidden",
            "width": null,
          },
          undefined,
        ]
      }
      testID="progress-bar"
      useNativeDriver={false}
    >
      <View
        style={
          Object {
            "backgroundColor": "#12A3BE",
            "height": 6,
            "transform": Array [
              Object {
                "translateX": -0,
              },
              Object {
                "translateX": -0,
              },
              Object {
                "scaleX": 0.30007,
              },
            ],
          }
        }
      />
    </View>
  </View>
</BVLinearGradient>
`;

exports[`PostDetail when the app finished to load post renders the PostDetail screen correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={false}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
          <HorizontalPadding
            padding={20}
            style={null}
            testID="horizontalPadding-component"
          >
            <Title
              required={false}
              rightAction={[Function]}
              rightText={null}
              style={Object {}}
              testID="commentsTitle-component"
              text="Comments"
              textTransform="capitalize"
            />
          </HorizontalPadding>
        </View>
      }
      data={
        Array [
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 1,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 1,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 2,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev1",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 1,
                "intercom_android_hasheable": "user-1intercom-android-hash",
                "intercom_ios_hasheable": "user-1-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 1,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "ROLE 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "ROLE 2",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 1",
          },
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 2,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 3,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 4,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 5,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 6,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev2",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 2,
                "intercom_android_hasheable": "user-2intercom-android-hash",
                "intercom_ios_hasheable": "user-2-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 3,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 7,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 8,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "ROLE 3",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "ROLE 4",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 2",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="commentsTitle-component"
                >
                  Comments
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 1
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 2
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail when the app is loading post renders a loading post component initially 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="gray"
        size="large"
        testID="activityIndicatorPost-testID"
      />
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail when the app is refreshing renders the PostDetail screen correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={false}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
          <HorizontalPadding
            padding={20}
            style={null}
            testID="horizontalPadding-component"
          >
            <Title
              required={false}
              rightAction={[Function]}
              rightText={null}
              style={Object {}}
              testID="commentsTitle-component"
              text="Comments"
              textTransform="capitalize"
            />
          </HorizontalPadding>
        </View>
      }
      data={
        Array [
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 1,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 1,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 2,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev1",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 1,
                "intercom_android_hasheable": "user-1intercom-android-hash",
                "intercom_ios_hasheable": "user-1-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 1,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "ROLE 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "ROLE 2",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 1",
          },
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 2,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 3,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 4,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 5,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 6,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev2",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 2,
                "intercom_android_hasheable": "user-2intercom-android-hash",
                "intercom_ios_hasheable": "user-2-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 3,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 7,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 8,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "ROLE 3",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "ROLE 4",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 2",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      refreshing={true}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="commentsTitle-component"
                >
                  Comments
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 1
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 2
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail with comments when the app finished to load comments renders the comments correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={false}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
          <HorizontalPadding
            padding={20}
            style={null}
            testID="horizontalPadding-component"
          >
            <Title
              required={false}
              rightAction={[Function]}
              rightText={null}
              style={Object {}}
              testID="commentsTitle-component"
              text="Comments"
              textTransform="capitalize"
            />
          </HorizontalPadding>
        </View>
      }
      data={
        Array [
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 1,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 1,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 2,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev1",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 1,
                "intercom_android_hasheable": "user-1intercom-android-hash",
                "intercom_ios_hasheable": "user-1-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 1,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "ROLE 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "ROLE 2",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 1",
          },
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 2,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 3,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 4,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 5,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 6,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev2",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 2,
                "intercom_android_hasheable": "user-2intercom-android-hash",
                "intercom_ios_hasheable": "user-2-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 3,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 7,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 8,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "ROLE 3",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "ROLE 4",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 2",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="commentsTitle-component"
                >
                  Comments
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 1
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 2
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail with comments when the app is loading comments renders a loading comments component initially 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={true}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
          <HorizontalPadding
            padding={20}
            style={null}
            testID="horizontalPadding-component"
          >
            <Title
              required={false}
              rightAction={[Function]}
              rightText={null}
              style={Object {}}
              testID="commentsTitle-component"
              text="Comments"
              textTransform="capitalize"
            />
          </HorizontalPadding>
        </View>
      }
      data={
        Array [
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 1,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 1,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 2,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev1",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 1,
                "intercom_android_hasheable": "user-1intercom-android-hash",
                "intercom_ios_hasheable": "user-1-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 1,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 1,
                    "name": "ROLE 1",
                  },
                  Object {
                    "custom": false,
                    "id": 2,
                    "name": "ROLE 2",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 1",
          },
          Object {
            "comment": Object {
              "created_at": 2020-12-13T00:00:00.000Z,
              "id": 2,
              "pilot": Object {
                "aircrafts": Array [
                  Object {
                    "flights": Array [],
                    "id": 3,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                  Object {
                    "flights": Array [],
                    "id": 4,
                    "make_and_model": "Cessna 123",
                    "picture_thumbnail_url": "Picture thumbnail URL",
                    "picture_url": "Picture URL",
                    "tail_number": "N1M2L3",
                  },
                ],
                "airports": undefined,
                "certificates": Array [
                  Object {
                    "custom": false,
                    "id": 5,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 6,
                    "name": "Credential 1",
                  },
                ],
                "cometchat_auth_token": "cometchat-auth-token",
                "cometchat_uid": "dev2",
                "community_tags": Array [
                  "tag 1",
                  "tag 2",
                ],
                "description": "Pilot description",
                "first_name": "First Name",
                "home_airport": "SAEZ",
                "id": 2,
                "intercom_android_hasheable": "user-2intercom-android-hash",
                "intercom_ios_hasheable": "user-2-intercom-ios-hash",
                "last_name": "Last Name",
                "latest_flights": undefined,
                "primary_aircraft_id": 3,
                "profile_picture_thumbnail_url": "http://profile/picture/url",
                "profile_picture_url": "http://profile/picture/url",
                "ratings": Array [
                  Object {
                    "custom": false,
                    "id": 7,
                    "name": "Credential 1",
                  },
                  Object {
                    "custom": false,
                    "id": 8,
                    "name": "Credential 1",
                  },
                ],
                "roles": Array [
                  Object {
                    "custom": false,
                    "id": 3,
                    "name": "ROLE 3",
                  },
                  Object {
                    "custom": false,
                    "id": 4,
                    "name": "ROLE 4",
                  },
                ],
                "total_hours": "11",
                "user": Object {
                  "email": "mail@test.com",
                },
              },
              "post": undefined,
              "post_id": undefined,
              "text": "Comment text message",
            },
            "text": "Text 2",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="commentsTitle-component"
                >
                  Comments
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 1
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                null,
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#F2F2F2",
                  "borderBottomWidth": 1,
                  "marginTop": 18,
                  "paddingBottom": 16,
                }
              }
              testID="comment-Comment"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "minHeight": 40,
                  }
                }
                testID="pilotsInfo-HeaderView"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignSelf": "center",
                        "aspectRatio": 1,
                        "backgroundColor": "#A0A0A0",
                        "borderRadius": 22,
                        "height": 28,
                        "marginTop": 6,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "aspectRatio": 1,
                            "backgroundColor": "#A0A0A0",
                            "borderRadius": 68,
                            "display": "flex",
                            "height": 28,
                            "justifyContent": "center",
                          }
                        }
                        testID="userAvatar-image"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "aspectRatio": 1,
                                "height": 15,
                                "width": 32,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/user.png",
                              }
                            }
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="image"
                            tintColor="#FFFFFF"
                          />
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "justifyContent": "center",
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "aspectRatio": 1,
                                "backgroundColor": "#A0A0A0",
                                "borderRadius": 68,
                                "display": "flex",
                                "height": 28,
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "aspectRatio": 1,
                                    "height": 15,
                                    "width": 32,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                resizeMode="cover"
                                source={
                                  Object {
                                    "testUri": "../../../src/assets/icons/user.png",
                                  }
                                }
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="userAvatar-image-loader"
                                tintColor="#FFFFFF"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "marginLeft": 10,
                        "marginVertical": 2,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <Text
                        style={
                          Object {
                            "color": "#1F2E4E",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Bold",
                            "fontSize": 14,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 20,
                          }
                        }
                        testID="pilotName-text"
                      >
                        <Text />
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "height": 0,
                          "marginTop": 0,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#767676",
                            "flexWrap": "wrap",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                          }
                        }
                        testID="bodyInfo-text"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                onPress={[Function]}
                testID="comment-testID"
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Regular",
                      "fontSize": 14,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="text-Text"
                >
                  <Text>
                    Text 2
                  </Text>
                </Text>
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          >
            <ActivityIndicator
              animating={true}
              color="gray"
              size="large"
              testID="activityIndicatorComments-testID"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail without comments when the app finished to load comments doesn't render the comments 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={false}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
        </View>
      }
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;

exports[`PostDetail without comments when the app is loading comments renders a loading comments component initially 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="postDetail-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "minHeight": 44,
          }
        }
        testID="navigationBar-component"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 15,
                "left": 15,
                "right": 15,
                "top": 15,
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/icons/chevronLeft.png",
                }
              }
              style={
                Object {
                  "height": 20,
                  "width": 20,
                }
              }
              testID="backArrow-image"
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.5,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            onPress={null}
            style={
              Object {
                "alignItems": "center",
                "color": "#000000",
                "flex": 1,
                "fontFamily": "NotoSansJP-Black",
                "fontSize": 16,
                "fontWeight": undefined,
                "letterSpacing": -0.3,
                "lineHeight": 22,
                "textAlign": "center",
              }
            }
            testID="title-text"
          >
            Pilot's post
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "minHeight": 44,
              },
              Object {
                "flex": 0.25,
                "justifyContent": "flex-end",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "width": 20,
              }
            }
            testID="rightPlaceholder-view"
          />
        </View>
      </View>
    </View>
    <RCTScrollView
      ListFooterComponent={
        <ActivityIndicator
          color="gray"
          containerStyle={Object {}}
          isLoading={true}
          size="large"
          testID="activityIndicatorComments-testID"
        />
      }
      ListHeaderComponent={
        <View
          style={
            Object {
              "marginTop": 26,
            }
          }
        >
          <Memo(PostComponent)
            commentButtonWasPressed={[Function]}
            contentWasPressed={[Function]}
            onHashtagPress={[Function]}
            postPresenter={
              Object {
                "pilotName": "Pilot name",
                "post": Object {
                  "airports": Array [
                    "airport 1",
                    "airport 2",
                  ],
                  "community_tags": Array [
                    "tag 1",
                    "tag 2",
                  ],
                  "created_at": 2020-12-13T00:00:00.000Z,
                  "edited_at": 2020-12-15T00:00:00.000Z,
                  "favorite": false,
                  "first_comments": Array [],
                  "flight": Object {
                    "aircraft": Object {
                      "flights": Array [],
                      "id": 7,
                      "make_and_model": "Cessna 123",
                      "picture_thumbnail_url": "Picture thumbnail URL",
                      "picture_url": "Picture URL",
                      "tail_number": "N1M2L3",
                    },
                    "arrival_time": 2021-07-02T20:14:51.350Z,
                    "departure_time": 2021-07-02T12:23:41.230Z,
                    "distance": 12957,
                    "duration": 148,
                    "from": "JAQ",
                    "id": 1,
                    "max_altitude": 9539,
                    "max_speed": 6542,
                    "to": "SMO",
                    "track_url": "track/url",
                  },
                  "hashtags": undefined,
                  "id": 1,
                  "liked": false,
                  "number_of_comments": undefined,
                  "number_of_likes": 2,
                  "photo_ids": Array [
                    15,
                    30,
                  ],
                  "photo_preview_urls": Array [
                    "some/image/preview/url",
                    "another/image/preview/url",
                  ],
                  "photo_urls": Array [
                    "some/image/url",
                    "another/image/url",
                  ],
                  "pilot": Object {
                    "aircrafts": Array [
                      Object {
                        "flights": Array [],
                        "id": 5,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                      Object {
                        "flights": Array [],
                        "id": 6,
                        "make_and_model": "Cessna 123",
                        "picture_thumbnail_url": "Picture thumbnail URL",
                        "picture_url": "Picture URL",
                        "tail_number": "N1M2L3",
                      },
                    ],
                    "airports": undefined,
                    "certificates": Array [
                      Object {
                        "custom": false,
                        "id": 9,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 10,
                        "name": "Credential 1",
                      },
                    ],
                    "cometchat_auth_token": "cometchat-auth-token",
                    "cometchat_uid": "dev3",
                    "community_tags": Array [
                      "tag 1",
                      "tag 2",
                    ],
                    "description": "Pilot description",
                    "first_name": "First Name",
                    "home_airport": "SAEZ",
                    "id": 3,
                    "intercom_android_hasheable": "user-3intercom-android-hash",
                    "intercom_ios_hasheable": "user-3-intercom-ios-hash",
                    "last_name": "Last Name",
                    "latest_flights": undefined,
                    "primary_aircraft_id": 5,
                    "profile_picture_thumbnail_url": "http://profile/picture/url",
                    "profile_picture_url": "http://profile/picture/url",
                    "ratings": Array [
                      Object {
                        "custom": false,
                        "id": 11,
                        "name": "Credential 1",
                      },
                      Object {
                        "custom": false,
                        "id": 12,
                        "name": "Credential 1",
                      },
                    ],
                    "roles": Array [
                      Object {
                        "custom": false,
                        "id": 5,
                        "name": "ROLE 5",
                      },
                      Object {
                        "custom": false,
                        "id": 6,
                        "name": "ROLE 6",
                      },
                    ],
                    "total_hours": "11",
                    "user": Object {
                      "email": "mail@test.com",
                    },
                  },
                  "text": "This is the text message",
                  "title": "A Title",
                  "visibility": "public",
                },
                "privacy": PublicPrivacyType {},
              }
            }
            showBackground={false}
            showOptionsComments={true}
            showPreviewComments={false}
            testID="post-component"
          />
        </View>
      }
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0.5}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="comments-FlatList"
      viewabilityConfigCallbackPairs={Array []}
    >
      <RCTRefreshControl />
      <View>
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "marginTop": 26,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "marginBottom": 24,
                    "paddingTop": 16,
                  },
                  false,
                ]
              }
              testID="post-component"
            >
              <View
                style={
                  Array [
                    Object {
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
                testID="horizontalPadding-component"
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "minHeight": 44,
                    }
                  }
                  testID="headerView-component"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "minHeight": 44,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignSelf": "center",
                          "aspectRatio": 1,
                          "backgroundColor": "#A0A0A0",
                          "borderRadius": 22,
                          "height": 44,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "aspectRatio": 1,
                              "backgroundColor": "#A0A0A0",
                              "borderRadius": 68,
                              "display": "flex",
                              "height": 44,
                              "justifyContent": "center",
                            }
                          }
                          testID="userAvatar-image"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "borderRadius": 68,
                                  "height": "100%",
                                  "width": "100%",
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              source={
                                Object {
                                  "uri": "http://profile/picture/url",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                              testID="image"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "bottom": 0,
                                "justifyContent": "center",
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "aspectRatio": 1,
                                  "backgroundColor": "#A0A0A0",
                                  "borderRadius": 68,
                                  "display": "flex",
                                  "height": 44,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "overflow": "hidden",
                                    },
                                    Object {
                                      "aspectRatio": 1,
                                      "height": 24,
                                      "width": 32,
                                    },
                                  ]
                                }
                              >
                                <FastImageView
                                  resizeMode="cover"
                                  source={
                                    Object {
                                      "testUri": "../../../src/assets/icons/user.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                  testID="userAvatar-image-loader"
                                  tintColor="#FFFFFF"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                          "marginLeft": 10,
                          "marginVertical": 2,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                      >
                        <Text
                          style={
                            Object {
                              "color": "#1F2E4E",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                            }
                          }
                          testID="pilotName-text"
                        >
                          <Text>
                            Pilot name
                          </Text>
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "marginTop": 4,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#767676",
                              "flexWrap": "wrap",
                              "fontFamily": "NotoSansJP-Regular",
                              "fontSize": 12,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 16,
                            }
                          }
                          testID="bodyInfo-text"
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../../src/assets/icons/privacyPublic.png",
                              }
                            }
                            style={
                              Object {
                                "height": 11.67,
                                "width": 11.67,
                              }
                            }
                            testID="public-post"
                          />
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <Text
                    style={
                      Object {
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 14,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "marginTop": 8,
                      }
                    }
                    testID="MentionText-testID"
                  >
                    <Text
                      style={Object {}}
                      testID="autolink-testID"
                    />
                  </Text>
                </View>
              </View>
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                  testID="horizontalPadding-component"
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "space-evenly",
                        "marginTop": 24,
                        "paddingBottom": 20,
                      }
                    }
                    testID="post-action-bar"
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="action-bar-like-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/thumbsUp.png",
                            }
                          }
                          style={
                            Object {
                              "height": 16.67,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="like-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="like-count-text"
                        >
                          0 likes
                        </Text>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          }
                        }
                        testID="post-comment-count"
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../../src/assets/icons/comment.png",
                            }
                          }
                          style={
                            Object {
                              "height": 14.58,
                              "tintColor": "#5B5B5B",
                              "width": 16.67,
                            }
                          }
                          testID="comment-count-image"
                        />
                        <Text
                          style={
                            Object {
                              "color": "#5B5B5B",
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 13,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "marginLeft": 9.67,
                            }
                          }
                          testID="comment-count-text"
                        >
                          0 comments
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <BVLinearGradient
                  colors={
                    Array [
                      4294111986,
                      4294967295,
                    ]
                  }
                  endPoint={
                    Object {
                      "x": 1,
                      "y": 1,
                    }
                  }
                  locations={null}
                  startPoint={
                    Object {
                      "x": 1,
                      "y": 0,
                    }
                  }
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
              <View
                testID="preview-comments-component"
              />
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
        >
          <View
            style={Object {}}
          >
            <ActivityIndicator
              animating={true}
              color="gray"
              size="large"
              testID="activityIndicatorComments-testID"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      onLayout={[Function]}
      style={
        Object {
          "paddingBottom": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 20,
            },
            null,
          ]
        }
        testID="horizontalPadding-component"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginVertical": 8,
            }
          }
          testID="comment-CommentBar"
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder=""
              placeholderTextColor="#A0A0A0"
              scrollEnabled={false}
              selectionColor="#12A3BE"
              style={
                Object {
                  "backgroundColor": "#F2F2F2",
                  "borderRadius": 8,
                  "color": "#000000",
                  "fontFamily": "NotoSansJP-Bold",
                  "fontSize": 14,
                  "fontWeight": "normal",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "minHeight": 48,
                  "paddingBottom": 16,
                  "paddingHorizontal": 12,
                  "paddingTop": 16,
                  "textAlignVertical": "top",
                }
              }
              testID="comment-Input"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "marginLeft": 12,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 3,
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 3,
                  },
                  undefined,
                  false,
                ]
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": false,
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="reply-TextButton"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-end",
                      "backgroundColor": "transparent",
                      "borderColor": "#2089dc",
                      "borderRadius": 26,
                      "borderWidth": 0,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "padding": 0,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 15,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "paddingVertical": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Reply
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;
