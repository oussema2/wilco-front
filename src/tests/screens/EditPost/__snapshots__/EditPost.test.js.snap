// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPost renders the EditPost screen correctly 1`] = `
<BVLinearGradient
  colors={
    Array [
      4291295231,
      4294967295,
    ]
  }
  endPoint={
    Object {
      "x": 0.25,
      "y": 0.3,
    }
  }
  locations={
    Array [
      0.5,
      1,
    ]
  }
  startPoint={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  style={
    Object {
      "alignItems": "center",
      "borderRadius": 5,
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "justifyContent": "center",
      "width": "100%",
    }
  }
  testID="editPost-screen"
>
  <RNCSafeAreaView
    edges={
      Array [
        "top",
        "right",
        "bottom",
        "left",
      ]
    }
    style={
      Object {
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingHorizontal": 20,
          },
          null,
        ]
      }
      testID="horizontalPadding-component"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "minHeight": 60,
          }
        }
        testID="title-header"
      >
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#000000",
              "fontFamily": "NotoSansJP-Bold",
              "fontSize": 32,
              "fontWeight": undefined,
              "letterSpacing": -1,
              "lineHeight": 40,
            }
          }
          testID="header-text"
        >
          Edit post
        </Text>
        <View
          style={
            Array [
              Object {
                "borderRadius": 3,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 3,
              },
              undefined,
              false,
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": false,
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="rightButton-TextButton"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-end",
                  "backgroundColor": "transparent",
                  "borderColor": "#2089dc",
                  "borderRadius": 26,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 0,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#D60A50",
                    "fontFamily": "NotoSansJP-Bold",
                    "fontSize": 15,
                    "fontWeight": undefined,
                    "letterSpacing": 0,
                    "lineHeight": 20,
                    "paddingVertical": 1,
                    "textAlign": "center",
                  }
                }
              >
                rightHeaderButtonTitle
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
          }
        }
        keyboardShouldPersistTaps="handled"
        style={
          Object {
            "backgroundColor": "#F6F9FA",
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "height": 24,
              }
            }
          />
          <View
            style={
              Array [
                Object {
                  "paddingHorizontal": 20,
                },
                Object {
                  "backgroundColor": "#FFFFFF",
                },
              ]
            }
            testID="horizontalPadding-component"
          >
            <View
              style={
                Object {
                  "marginVertical": 16,
                  "minHeight": 98,
                }
              }
              testID="title-input"
            >
              <View
                style={
                  Object {
                    "alignContent": "center",
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#242424",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "marginBottom": 4,
                    }
                  }
                  testID="input-label"
                >
                  Title
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  editable={true}
                  multiline={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  placeholder="Add a title"
                  placeholderTextColor="#A0A0A0"
                  scrollEnabled={false}
                  selectionColor="#12A3BE"
                  style={
                    Object {
                      "backgroundColor": "#F2F2F2",
                      "borderRadius": 8,
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Bold",
                      "fontSize": 14,
                      "fontWeight": "normal",
                      "letterSpacing": 0,
                      "lineHeight": 20,
                      "minHeight": 48,
                      "paddingBottom": 16,
                      "paddingHorizontal": 12,
                      "paddingTop": 16,
                      "textAlignVertical": "top",
                    }
                  }
                  testID="input"
                  value=""
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            onLayout={[Function]}
          >
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  Object {
                    "backgroundColor": "#FFFFFF",
                  },
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "marginBottom": 24,
                    "marginTop": 16,
                    "minHeight": 98,
                  }
                }
                testID="message-input"
              >
                <View
                  style={
                    Object {
                      "alignContent": "center",
                      "alignItems": "flex-start",
                      "display": "flex",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignContent": "center",
                        "alignItems": "flex-start",
                        "display": "flex",
                        "flexDirection": "row",
                      }
                    }
                    testID="comment-Component"
                  >
                    <View
                      collapsable={false}
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "#242424",
                              "fontFamily": "NotoSansJP-Black",
                              "fontSize": 16,
                              "fontWeight": undefined,
                              "letterSpacing": -0.3,
                              "lineHeight": 22,
                              "marginBottom": 4,
                              "paddingRight": 16,
                            }
                          }
                          testID="input-label"
                        >
                          Message / Trip notes
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "width": 35,
                              }
                            }
                          >
                            <Image
                              source={
                                Object {
                                  "testUri": "../../../src/assets/icons/infoCircle.png",
                                }
                              }
                              style={
                                Object {
                                  "height": 16,
                                  "marginLeft": 0,
                                  "width": 16,
                                }
                              }
                            />
                          </View>
                        </Text>
                      </View>
                      <Modal
                        animationType="fade"
                        hardwareAccelerated={false}
                        onShow={[Function]}
                        transparent={true}
                        visible={false}
                      >
                        <View
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          nativeID="animatedComponent"
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "rgba(250, 250, 250, 0.70)",
                              "flex": 1,
                              "opacity": 1,
                            }
                          }
                        >
                          <View>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "height": 0,
                                  "left": 0,
                                  "overflow": "visible",
                                  "position": "absolute",
                                  "top": 0,
                                  "width": 0,
                                }
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#242424",
                                    "fontFamily": "NotoSansJP-Black",
                                    "fontSize": 16,
                                    "fontWeight": undefined,
                                    "letterSpacing": -0.3,
                                    "lineHeight": 22,
                                    "marginBottom": 4,
                                    "paddingRight": 16,
                                  }
                                }
                                testID="input-label"
                              >
                                Message / Trip notes
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "width": 35,
                                    }
                                  }
                                >
                                  <Image
                                    source={
                                      Object {
                                        "testUri": "../../../src/assets/icons/infoCircle.png",
                                      }
                                    }
                                    style={
                                      Object {
                                        "height": 16,
                                        "marginLeft": 0,
                                        "width": 16,
                                      }
                                    }
                                  />
                                </View>
                              </Text>
                            </View>
                            <View
                              style={
                                Object {
                                  "left": -7.5,
                                  "position": "absolute",
                                  "top": -2,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderBottomColor": "#1F2E4E",
                                    "borderBottomWidth": 15,
                                    "borderLeftColor": "transparent",
                                    "borderLeftWidth": 8,
                                    "borderRightColor": "transparent",
                                    "borderRightWidth": 8,
                                    "borderStyle": "solid",
                                    "height": 0,
                                    "width": 0,
                                  }
                                }
                              />
                            </View>
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#1F2E4E",
                                  "borderRadius": 10,
                                  "display": "flex",
                                  "flex": 1,
                                  "height": null,
                                  "justifyContent": "center",
                                  "left": -17.999,
                                  "padding": 16,
                                  "position": "absolute",
                                  "top": 10,
                                  "width": 246,
                                }
                              }
                              testID="tooltipPopoverContainer"
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#FFFFFF",
                                    "fontFamily": "NotoSansJP-Regular",
                                    "fontSize": 12,
                                    "fontWeight": undefined,
                                    "letterSpacing": 0,
                                    "lineHeight": 16,
                                  }
                                }
                                testID="messageTooltipPopover-testID"
                              >
                                You can mention a person using
                                 
                                <Text
                                  style={
                                    Object {
                                      "color": "#FFFFFF",
                                      "fontFamily": "NotoSansJP-Regular",
                                      "fontSize": 12,
                                      "fontWeight": "bold",
                                      "letterSpacing": 0,
                                      "lineHeight": 16,
                                    }
                                  }
                                >
                                  @name
                                </Text>
                                , add an airport identifier by using the
                                 
                                <Text
                                  style={
                                    Object {
                                      "color": "#FFFFFF",
                                      "fontFamily": "NotoSansJP-Regular",
                                      "fontSize": 12,
                                      "fontWeight": "bold",
                                      "letterSpacing": 0,
                                      "lineHeight": 16,
                                    }
                                  }
                                >
                                  +ICAO
                                </Text>
                                 
                                code or add
                                 
                                <Text
                                  style={
                                    Object {
                                      "color": "#FFFFFF",
                                      "fontFamily": "NotoSansJP-Regular",
                                      "fontSize": 12,
                                      "fontWeight": "bold",
                                      "letterSpacing": 0,
                                      "lineHeight": 16,
                                    }
                                  }
                                >
                                  #hashtags
                                </Text>
                                .
                              </Text>
                            </View>
                          </View>
                        </View>
                      </Modal>
                    </View>
                  </View>
                </View>
                <View>
                  <TextInput
                    autoCapitalize="sentences"
                    minimumLines={5}
                    multiline={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onSelectionChange={[Function]}
                    placeholder="Share an activity or experience
Request feedback
Post a PIREP"
                    scrollEnabled={false}
                    style={
                      Object {
                        "backgroundColor": "#F2F2F2",
                        "borderRadius": 8,
                        "color": "#000000",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 14,
                        "fontWeight": "normal",
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "maxHeight": undefined,
                        "minHeight": 128,
                        "paddingBottom": 16,
                        "paddingHorizontal": 12,
                        "paddingTop": 16,
                        "textAlignVertical": "top",
                      }
                    }
                    testID="input"
                  >
                    <Text>
                      <Text>
                        
                      </Text>
                    </Text>
                  </TextInput>
                  <RCTScrollView
                    keyboardShouldPersistTaps="always"
                    style={0}
                    testID="pilotSuggestions-testID"
                  >
                    <View />
                  </RCTScrollView>
                  <RCTScrollView
                    keyboardShouldPersistTaps="always"
                    style={0}
                    testID="hashtagSuggestions-testID"
                  >
                    <View />
                  </RCTScrollView>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "marginBottom": 24,
                      "marginTop": 16,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="title-component"
                >
                  Flight info
                </Text>
              </View>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                  "paddingHorizontal": 20,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#12A3BE",
                    "borderRadius": 1,
                    "borderStyle": "dashed",
                    "borderWidth": 1,
                    "height": 128,
                    "justifyContent": "center",
                    "marginBottom": 16,
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/assets/icons/planeDeparture.png",
                    }
                  }
                  style={
                    Object {
                      "height": 24,
                      "width": 24,
                    }
                  }
                  testID="placeholder-button-image"
                />
                <Text
                  style={
                    Object {
                      "color": "#12A3BE",
                      "fontFamily": "NotoSansJP-Bold",
                      "fontSize": 13,
                      "fontWeight": undefined,
                      "letterSpacing": 0,
                      "lineHeight": 20,
                    }
                  }
                  testID="aircraft-placeholder-testID"
                >
                  Share a flight
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  null,
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "NotoSansJP-Black",
                      "fontSize": 16,
                      "fontWeight": undefined,
                      "letterSpacing": -0.3,
                      "lineHeight": 22,
                      "marginBottom": 4,
                      "marginTop": 16,
                      "minHeight": 22,
                      "textTransform": "capitalize",
                    }
                  }
                  testID="image-title-testID"
                >
                  Photo
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 10,
                  "marginTop": 24,
                  "minHeight": 72,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 20,
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#12A3BE",
                      "borderRadius": 1,
                      "borderStyle": "dashed",
                      "borderWidth": 1,
                      "height": 128,
                      "justifyContent": "center",
                      "marginBottom": 16,
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../src/assets/icons/photoVideo.png",
                      }
                    }
                    style={
                      Object {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    testID="placeholder-button-image"
                  />
                  <Text
                    style={
                      Object {
                        "color": "#12A3BE",
                        "fontFamily": "NotoSansJP-Bold",
                        "fontSize": 13,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 20,
                      }
                    }
                    testID="add-photos-button"
                  >
                    Add photos
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <View
            onLayout={[Function]}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  Object {
                    "paddingTop": 16,
                    "zIndex": 1,
                  },
                ]
              }
              testID="horizontalPadding-component"
            >
              <View />
              <View
                style={
                  Object {
                    "elevation": 2,
                    "minHeight": 98,
                    "zIndex": 2,
                  }
                }
                testID="community-input"
              >
                <View
                  style={
                    Object {
                      "alignContent": "center",
                      "alignItems": "flex-start",
                      "display": "flex",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#242424",
                        "fontFamily": "NotoSansJP-Black",
                        "fontSize": 16,
                        "fontWeight": undefined,
                        "letterSpacing": -0.3,
                        "lineHeight": 22,
                        "marginBottom": 4,
                      }
                    }
                    testID="input-label"
                  >
                    Communities
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "elevation": 1,
                      "zIndex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "paddingHorizontal": 0,
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        nativeID="animatedComponent"
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#F2F2F2",
                            "borderBottomWidth": 0,
                            "borderColor": "#86939e",
                            "borderRadius": 8,
                            "flexDirection": "row",
                            "marginBottom": 5,
                            "minHeight": 52,
                            "paddingHorizontal": 12,
                            "textAlignVertical": "center",
                            "transform": Array [
                              Object {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <TextInput
                          autoCapitalize="none"
                          autoCorrect={true}
                          editable={true}
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder=""
                          placeholderTextColor="#A0A0A0"
                          returnKeyType="done"
                          scrollEnabled={false}
                          secureTextEntry={false}
                          selectionColor="#12A3BE"
                          style={
                            Object {
                              "color": "#000000",
                              "flex": 1,
                              "fontFamily": "NotoSansJP-Bold",
                              "fontSize": 14,
                              "fontWeight": undefined,
                              "letterSpacing": 0,
                              "lineHeight": 20,
                              "minHeight": 40,
                              "paddingVertical": 0,
                            }
                          }
                          testID="Input-Component"
                          textAlignVertical="center"
                          underlineColorAndroid="transparent"
                          value=""
                        />
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "height": 40,
                              "justifyContent": "center",
                              "marginVertical": 4,
                              "paddingRight": 4,
                            }
                          }
                        >
                          <View
                            style={Object {}}
                          >
                            <ActivityIndicator
                              animating={true}
                              color="gray"
                              size="small"
                              testID="activity-indicator"
                            />
                          </View>
                        </View>
                      </View>
                      <Text
                        style={
                          Object {
                            "color": "#D60A50",
                            "fontFamily": "NotoSansJP-Regular",
                            "fontSize": 12,
                            "fontWeight": undefined,
                            "letterSpacing": 0,
                            "lineHeight": 16,
                            "margin": 0,
                            "marginLeft": 0,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#D3D3D3",
                          "borderRadius": 4,
                          "marginBottom": 16,
                          "position": "relative",
                          "width": "100%",
                          "zIndex": 1,
                        },
                        Object {
                          "marginBottom": 0,
                        },
                      ]
                    }
                  />
                  <Text
                    style={
                      Object {
                        "color": "#242424",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 12,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 16,
                        "marginBottom": 8,
                        "marginTop": -8,
                      }
                    }
                    testID="helperText-ID"
                  >
                    Add up to undefined communities.
                  </Text>
                </View>
              </View>
              <View
                testID="tags-component"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-start",
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                        "marginBottom": 20,
                      },
                      Object {},
                    ]
                  }
                />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 16,
                  },
                  Object {
                    "backgroundColor": "#F6F9FA",
                  },
                ]
              }
            />
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 20,
                  },
                  Object {
                    "marginBottom": 0,
                    "marginTop": 16,
                  },
                ]
              }
              testID="horizontalPadding-component"
            >
              <View
                style={
                  Object {
                    "height": 98,
                  }
                }
                testID="visibility-input"
              >
                <View
                  style={
                    Object {
                      "alignContent": "center",
                      "alignItems": "flex-start",
                      "display": "flex",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "fontFamily": "NotoSansJP-Black",
                        "fontSize": 16,
                        "fontWeight": undefined,
                        "letterSpacing": -0.3,
                        "lineHeight": 22,
                        "marginBottom": 4,
                      }
                    }
                    testID="touchable-input-label"
                  >
                    Post Visibility
                  </Text>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#F2F2F2",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "minHeight": 52,
                        "paddingHorizontal": 12,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "#000000",
                          "flex": 1,
                          "fontFamily": "NotoSansJP-Bold",
                          "fontSize": 14,
                          "fontWeight": undefined,
                          "letterSpacing": 0,
                          "lineHeight": 20,
                        }
                      }
                      testID="touchable-input-text"
                    >
                      Only me
                    </Text>
                    <View
                      style={
                        Array [
                          Object {
                            "overflow": "hidden",
                          },
                          Object {
                            "height": 23,
                            "width": 14,
                          },
                        ]
                      }
                    >
                      <FastImageView
                        resizeMode="cover"
                        source={
                          Object {
                            "testUri": "../../../src/assets/icons/chevronRight.png",
                          }
                        }
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                        testID="touchable-input-icon"
                      />
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "marginVertical": 5,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#D60A50",
                        "fontFamily": "NotoSansJP-Regular",
                        "fontSize": 12,
                        "fontWeight": undefined,
                        "letterSpacing": 0,
                        "lineHeight": 16,
                      }
                    }
                    testID="touchable-input-error"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 36,
              }
            }
          />
        </View>
      </RCTScrollView>
      <View>
        <View
          style={
            Object {
              "alignSelf": "center",
              "marginBottom": 10,
              "marginTop": 8,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 3,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 3,
                },
                undefined,
                false,
              ]
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "busy": false,
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="submit-button"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#12A3BE",
                    "borderColor": "#2089dc",
                    "borderRadius": 26,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "height": 60,
                    "justifyContent": "center",
                    "padding": 8,
                    "width": 335,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "NotoSansJP-Bold",
                      "fontSize": 15,
                      "fontWeight": undefined,
                      "letterSpacing": 0.4,
                      "lineHeight": 20,
                      "paddingVertical": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Submit button title
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaView>
</BVLinearGradient>
`;
