{"version":3,"sources":["index.js"],"names":["width","height","Dimensions","get","MultipleImagePicker","NativeModules","exportObject","defaultOptions","usedPrefetch","allowedAlbumCloudShared","muteAudio","autoPlay","haveThumbnail","thumbnailWidth","Math","round","thumbnailHeight","allowedLivePhotos","preventAutomaticLimitedAccessAlert","emptyMessage","selectMessage","deselectMessage","selectedColor","maximumMessageTitle","maximumMessage","maximumVideoMessage","messageTitleButton","cancelTitle","tapHereToChange","usedCameraButton","allowedVideo","allowedPhotograph","allowedVideoRecording","maxVideoDuration","numberOfColumn","maxSelectedAssets","doneTitle","isPreview","mediaType","isExportThumbnail","maxVideo","selectedAssets","singleSelectedMode","isCrop","isCropCircle","openPicker","optionsPicker","options","isSingle","Promise","resolve","reject","response","length","e"],"mappings":"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","sourcesContent":["import { NativeModules, Dimensions } from 'react-native';\nconst { width, height } = Dimensions.get('window');\nconst { MultipleImagePicker } = NativeModules;\n\nlet exportObject = {};\n\nlet defaultOptions = {\n  //**iOS**//\n  usedPrefetch: false,\n  allowedAlbumCloudShared: false,\n  muteAudio: true,\n  autoPlay: true,\n  //resize thumbnail\n  haveThumbnail: true,\n\n  thumbnailWidth: Math.round(width / 2),\n  thumbnailHeight: Math.round(height / 2),\n  allowedLivePhotos: true,\n  preventAutomaticLimitedAccessAlert: true, // newest iOS 14\n  emptyMessage: 'No albums',\n  selectMessage: 'Select',\n  deselectMessage: 'Deselect',\n  selectedColor: '#FB9300',\n  maximumMessageTitle: 'Notification',\n  maximumMessage: 'You have selected the maximum number of media allowed',\n  maximumVideoMessage: 'You have selected the maximum number of video allowed',\n  messageTitleButton: 'OK',\n  cancelTitle: 'Cancel',\n  tapHereToChange: 'Tap here to change',\n\n  //****//\n\n  //**Android**//\n\n  //****//\n\n  //**Both**//\n  usedCameraButton: true,\n  allowedVideo: true,\n  allowedPhotograph: true, // for camera : allow this option when you want to take a photos\n  allowedVideoRecording: false, //for camera : allow this option when you want to recording video.\n  maxVideoDuration: 60, //for camera : max video recording duration\n  numberOfColumn: 3,\n  maxSelectedAssets: 20,\n  doneTitle: 'Done',\n  isPreview: true,\n  mediaType: 'all',\n  isExportThumbnail: false,\n  maxVideo: 20,\n  selectedAssets: [],\n  singleSelectedMode: false,\n  isCrop: false,\n  isCropCircle: false,\n  //****//\n\n  // fetchOption: Object,\n  // fetchCollectionOption: Object,\n\n  // emptyImage: Image,\n};\n\nexportObject = {\n  openPicker: (optionsPicker) => {\n    const options = {\n      ...defaultOptions,\n      ...optionsPicker,\n    };\n    const isSingle = options?.singleSelectedMode ?? false;\n    if (isSingle) options.selectedAssets = [];\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await MultipleImagePicker.openPicker(options);\n        // console.log('res', response);\n        if (response?.length) {\n          if (isSingle) {\n            resolve(response[0]);\n          }\n          resolve(response);\n          return;\n        }\n        resolve([]);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n};\n\nexport default exportObject;\n"]}