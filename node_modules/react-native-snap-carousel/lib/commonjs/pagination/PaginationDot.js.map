{"version":3,"sources":["PaginationDot.tsx"],"names":["PaginationDot","PureComponent","constructor","props","state","animColor","Animated","Value","animOpacity","animTransform","componentDidMount","active","_animate","componentDidUpdate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","duration","spring","friction","tension","push","parallel","start","color","inactiveColor","render","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","styles","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined"],"mappings":"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","sourcesContent":["import React, { PureComponent, RefObject } from 'react';\nimport {\n    Animated,\n    Easing,\n    TouchableOpacity,\n    StyleProp,\n    ViewStyle\n} from 'react-native';\nimport styles from './Pagination.style';\nimport type Carousel from 'src/carousel/Carousel';\n\ntype PaginationDotProps<TData> = {\n  inactiveOpacity: number;\n  inactiveScale: number;\n  active?: boolean;\n  activeOpacity?: number;\n  animatedDuration?: number;\n  animatedFriction?: number;\n  animatedTension?: number;\n  carouselRef?: Carousel<TData> | RefObject<Carousel<TData>> | null;\n  color?: string;\n  containerStyle?: StyleProp<ViewStyle>;\n  delayPressInDot?: number;\n  inactiveColor?: string;\n  inactiveStyle?: StyleProp<ViewStyle>;\n  index?: number;\n  style?: StyleProp<ViewStyle>;\n  tappable?: boolean;\n};\n\ntype PaginationDotState = {\n  animColor: Animated.Value;\n  animOpacity: Animated.Value;\n  animTransform: Animated.Value;\n};\n\nexport default class PaginationDot<TData> extends PureComponent<\n  PaginationDotProps<TData>,\n  PaginationDotState\n> {\n    constructor (props: PaginationDotProps<TData>) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate (prevProps: PaginationDotProps<TData>) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props;\n\n        const commonProperties = {\n            toValue,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        const animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                duration: animatedDuration,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(\n                Animated.timing(animColor, {\n                    easing: Easing.linear,\n                    ...commonProperties\n                })\n            );\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [\n                {\n                    scale: animTransform.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [inactiveScale, 1]\n                    })\n                }\n            ]\n        };\n        const animatedColor =\n      this._shouldAnimateColor && inactiveColor && color ?\n          {\n              backgroundColor: animColor.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [inactiveColor, color]\n              })\n          } :\n          {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress =\n      tappable && (!!index || index === 0) ?\n          () => {\n              try {\n                  const currentRef =\n                carouselRef && 'current' in carouselRef ?\n                    carouselRef.current :\n                    carouselRef;\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              currentRef!._snapToItem(currentRef!._getPositionIndex(index));\n              } catch (error) {\n                  console.warn(\n                      'react-native-snap-carousel | Pagination: ' +\n                  '`carouselRef` has to be a Carousel ref.\\n' +\n                  error\n                  );\n              }\n          } :\n          undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n              delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"]}