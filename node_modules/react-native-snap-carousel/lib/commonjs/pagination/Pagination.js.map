{"version":3,"sources":["Pagination.tsx"],"names":["IS_IOS","Platform","OS","IS_RTL","I18nManager","isRTL","Pagination","PureComponent","constructor","props","dotColor","inactiveDotColor","console","warn","dotElement","inactiveDotElement","tappableDots","carouselRef","undefined","_needsRTLAdaptations","vertical","_activeDotIndex","activeDotIndex","dotsLength","dots","activeOpacity","dotContainerStyle","dotStyle","inactiveDotOpacity","inactiveDotScale","inactiveDotStyle","renderDots","animatedDuration","animatedFriction","animatedTension","delayPressInDot","DefaultDot","Array","keys","map","i","isActive","React","cloneElement","key","active","index","render","containerStyle","accessibilityLabel","style","styles","sliderPagination","flexDirection"],"mappings":"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","sourcesContent":["import React, { PureComponent, ReactElement } from 'react';\nimport {\n    I18nManager,\n    Platform,\n    View,\n    StyleProp,\n    ViewStyle\n} from 'react-native';\nimport PaginationDot from './PaginationDot';\nimport styles from './Pagination.style';\nimport type Carousel from 'src/carousel/Carousel';\n\nconst IS_IOS = Platform.OS === 'ios';\nconst IS_RTL = I18nManager.isRTL;\n\ntype PaginationProps<TData> = {\n  activeDotIndex: number;\n  dotsLength: number;\n  activeOpacity?: number;\n  carouselRef?: Carousel<TData> | null;\n  containerStyle?: StyleProp<ViewStyle>;\n  dotColor?: string;\n  dotContainerStyle?: StyleProp<ViewStyle>;\n  dotElement?: ReactElement;\n  dotStyle?: StyleProp<ViewStyle>;\n  inactiveDotColor?: string;\n  inactiveDotElement?: ReactElement;\n  inactiveDotOpacity: number;\n  inactiveDotScale: number;\n  inactiveDotStyle?: StyleProp<ViewStyle>;\n  renderDots?: (\n    activeIndex: number,\n    length: number,\n    context: Pagination<TData>\n  ) => ReactElement;\n  tappableDots: boolean;\n  vertical: boolean;\n  accessibilityLabel?: string;\n  animatedDuration: number;\n  animatedFriction: number;\n  animatedTension: number;\n  delayPressInDot: number;\n};\n\nexport default class Pagination<TData> extends PureComponent<PaginationProps<TData>> {\n  static defaultProps = {\n      inactiveDotOpacity: 0.5,\n      inactiveDotScale: 0.5,\n      tappableDots: false,\n      vertical: false,\n      animatedDuration: 250,\n      animatedFriction: 4,\n      animatedTension: 50,\n      delayPressInDot: 0\n  };\n\n  constructor (props: PaginationProps<TData>) {\n      super(props);\n\n      // Warnings\n      if (\n          (props.dotColor && !props.inactiveDotColor) ||\n      (!props.dotColor && props.inactiveDotColor)\n      ) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You need to specify both `dotColor` and `inactiveDotColor`'\n          );\n      }\n      if (\n          (props.dotElement && !props.inactiveDotElement) ||\n      (!props.dotElement && props.inactiveDotElement)\n      ) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You need to specify both `dotElement` and `inactiveDotElement`'\n          );\n      }\n      if (props.tappableDots && props.carouselRef === undefined) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You must specify prop `carouselRef` when setting `tappableDots` to `true`'\n          );\n      }\n  }\n\n  _needsRTLAdaptations () {\n      const { vertical } = this.props;\n      return IS_RTL && !IS_IOS && !vertical;\n  }\n\n  get _activeDotIndex () {\n      const { activeDotIndex, dotsLength } = this.props;\n      return this._needsRTLAdaptations() ?\n          dotsLength - activeDotIndex - 1 :\n          activeDotIndex;\n  }\n\n  get dots () {\n      const {\n          activeOpacity,\n          carouselRef,\n          dotsLength,\n          dotColor,\n          dotContainerStyle,\n          dotElement,\n          dotStyle,\n          inactiveDotColor,\n          inactiveDotElement,\n          inactiveDotOpacity,\n          inactiveDotScale,\n          inactiveDotStyle,\n          renderDots,\n          tappableDots,\n          animatedDuration,\n          animatedFriction,\n          animatedTension,\n          delayPressInDot\n      } = this.props;\n\n      if (renderDots) {\n          return renderDots(this._activeDotIndex, dotsLength, this);\n      }\n\n      const DefaultDot = (\n          <PaginationDot\n            carouselRef={carouselRef}\n            tappable={tappableDots && typeof carouselRef !== 'undefined'}\n            activeOpacity={activeOpacity}\n            color={dotColor}\n            containerStyle={dotContainerStyle}\n            style={dotStyle}\n            inactiveColor={inactiveDotColor}\n            inactiveOpacity={inactiveDotOpacity}\n            inactiveScale={inactiveDotScale}\n            inactiveStyle={inactiveDotStyle}\n            animatedDuration={animatedDuration}\n            animatedFriction={animatedFriction}\n            animatedTension={animatedTension}\n            delayPressInDot={delayPressInDot}\n          />\n      );\n\n      const dots = [...Array(dotsLength).keys()].map((i) => {\n          const isActive = i === this._activeDotIndex;\n          return React.cloneElement(\n              (isActive ? dotElement : inactiveDotElement) || DefaultDot,\n              {\n                  key: `pagination-dot-${i}`,\n                  active: isActive,\n                  index: i\n              }\n          );\n      });\n\n      return dots;\n  }\n\n  render () {\n      const {\n          dotsLength,\n          containerStyle,\n          vertical,\n          accessibilityLabel\n      } = this.props;\n\n      if (!dotsLength || dotsLength < 2) {\n          return false;\n      }\n\n      const style = [\n          styles.sliderPagination,\n          {\n              flexDirection: vertical ?\n                  ('column' as const) :\n                  this._needsRTLAdaptations() ?\n                      ('row-reverse' as const) :\n                      ('row' as const)\n          },\n          containerStyle || {}\n      ];\n\n      return (\n          <View\n            pointerEvents='box-none'\n            style={style}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={accessibilityLabel}\n          >\n              {this.dots}\n          </View>\n      );\n  }\n}\n"]}