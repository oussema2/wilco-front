{"version":3,"sources":["ParallaxImage.tsx"],"names":["ParallaxImageStatus","ParallaxImage","Component","constructor","props","state","offset","width","height","status","LOADING","animOpacity","Animated","Value","_onLoad","bind","_onError","_measureLayout","setNativeProps","nativeProps","_container","componentDidMount","_mounted","setTimeout","componentWillUnmount","dimensions","carouselRef","nodeHandle","measureLayout","x","y","vertical","sliderHeight","itemHeight","sliderWidth","itemWidth","setState","Math","ceil","event","fadeDuration","onLoad","LOADED","timing","toValue","duration","easing","Easing","out","quad","isInteraction","useNativeDriver","start","TRANSITION_FINISHED","onError","ERROR","image","scrollPosition","parallaxFactor","style","AnimatedImageComponent","other","parallaxPadding","requiredStyles","position","dynamicStyles","opacity","transform","translateX","interpolate","inputRange","outputRange","extrapolate","translateY","styles","undefined","spinner","showSpinner","spinnerColor","loaderContainer","render","containerStyle","c","container","Image"],"mappings":"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","sourcesContent":["// Parallax effect inspired by https://github.com/oblador/react-native-parallax/\n\nimport React, { Component } from 'react';\nimport {\n    View,\n    Animated,\n    Easing,\n    ActivityIndicator,\n    findNodeHandle,\n    ImageProps,\n    StyleProp,\n    ViewStyle,\n    NativeSyntheticEvent,\n    ImageLoadEventData,\n    ImageErrorEventData\n} from 'react-native';\nimport styles from './ParallaxImage.style';\n\ntype VerticalProps = {\n    vertical: true;\n    sliderHeight: number; // passed from <Carousel />\n    itemHeight: number; // passed from <Carousel />\n}\ntype HorizontalProps = {\n    vertical: false;\n    sliderWidth: number; // passed from <Carousel />\n    itemWidth: number; // passed from <Carousel />\n}\n\ntype ParallaxImageProps = {\n  carouselRef: Parameters<typeof findNodeHandle>[0]; // passed from <Carousel />\n  scrollPosition: Animated.Value | undefined; // passed from <Carousel />\n  containerStyle: StyleProp<ViewStyle>;\n  dimensions?: {\n    width: number;\n    height: number;\n  };\n  fadeDuration: number;\n  parallaxFactor: number;\n  showSpinner: boolean;\n  spinnerColor: string;\n  AnimatedImageComponent: typeof Animated.Image;\n} & ImageProps & (VerticalProps | HorizontalProps);\n\nexport enum ParallaxImageStatus {\n    'LOADING' = 1,\n    'LOADED' = 2,\n    'TRANSITION_FINISHED' = 3,\n    'ERROR' = 4\n}\n\ntype ParallaxImageState = {\n  offset: number;\n  width: number;\n  height: number;\n  status: ParallaxImageStatus;\n  animOpacity: Animated.Value;\n};\n\nexport default class ParallaxImage extends Component<\n  ParallaxImageProps,\n  ParallaxImageState\n> {\n  static defaultProps = {\n      containerStyle: {},\n      fadeDuration: 500,\n      parallaxFactor: 0.3,\n      showSpinner: true,\n      spinnerColor: 'rgba(0, 0, 0, 0.4)',\n      AnimatedImageComponent: Animated.Image\n  };\n\n  _container?: View | null;\n  _mounted?: boolean;\n\n  constructor (props: ParallaxImageProps) {\n      super(props);\n      this.state = {\n          offset: 0,\n          width: 0,\n          height: 0,\n          status: ParallaxImageStatus.LOADING,\n          animOpacity: new Animated.Value(0)\n      };\n      this._onLoad = this._onLoad.bind(this);\n      this._onError = this._onError.bind(this);\n      this._measureLayout = this._measureLayout.bind(this);\n  }\n\n  setNativeProps (nativeProps: { [key: string]: unknown }) {\n    this._container?.setNativeProps(nativeProps);\n  }\n\n  componentDidMount () {\n      this._mounted = true;\n\n      setTimeout(() => {\n          this._measureLayout();\n      }, 0);\n  }\n\n  componentWillUnmount () {\n      this._mounted = false;\n  }\n\n  _measureLayout () {\n      if (this._container) {\n          const {\n              dimensions,\n              carouselRef\n          } = this.props;\n\n          const nodeHandle = findNodeHandle(carouselRef);\n\n          if (carouselRef && nodeHandle) {\n              this._container.measureLayout(\n                  nodeHandle,\n                  (x, y, width, height) => {\n                      const offset = this.props.vertical ?\n                          y - (this.props.sliderHeight - this.props.itemHeight) / 2 :\n                          x - (this.props.sliderWidth - this.props.itemWidth) / 2;\n\n                      this.setState({\n                          offset: offset,\n                          width:\n                dimensions && dimensions.width ?\n                    dimensions.width :\n                    Math.ceil(width),\n                          height:\n                dimensions && dimensions.height ?\n                    dimensions.height :\n                    Math.ceil(height)\n                      });\n                  },\n                  // eslint-disable-next-line @typescript-eslint/no-empty-function\n                  () => {}\n              );\n          }\n      }\n  }\n\n  _onLoad (event: NativeSyntheticEvent<ImageLoadEventData>) {\n      const { animOpacity } = this.state;\n      const { fadeDuration, onLoad } = this.props;\n\n      if (!this._mounted) {\n          return;\n      }\n\n      this.setState({ status: ParallaxImageStatus.LOADED });\n\n      if (onLoad) {\n          onLoad(event);\n      }\n\n      Animated.timing(animOpacity, {\n          toValue: 1,\n          duration: fadeDuration,\n          easing: Easing.out(Easing.quad),\n          isInteraction: false,\n          useNativeDriver: true\n      }).start(() => {\n          this.setState({ status: ParallaxImageStatus.TRANSITION_FINISHED });\n      });\n  }\n\n  // If arg is missing from method signature, it just won't be called\n  _onError (event: NativeSyntheticEvent<ImageErrorEventData>) {\n      const { onError } = this.props;\n\n      this.setState({ status: ParallaxImageStatus.ERROR });\n\n      if (onError) {\n          onError(event);\n      }\n  }\n\n  get image () {\n      const { status, animOpacity, offset, width, height } = this.state;\n      const {\n          scrollPosition,\n          // False positive :( other doesn't have the dimension key\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          dimensions,\n          parallaxFactor,\n          style,\n          AnimatedImageComponent,\n          ...other\n      } = this.props;\n      const parallaxPadding = (this.props.vertical ? height : width) * parallaxFactor;\n      const requiredStyles = { position: 'relative' as const };\n      const dynamicStyles = {\n          width: this.props.vertical ? width : width + parallaxPadding * 2,\n          height: this.props.vertical ? height + parallaxPadding * 2 : height,\n          opacity: animOpacity,\n          transform: scrollPosition ?\n              [\n                  {\n                      translateX: !this.props.vertical ?\n                          scrollPosition.interpolate({\n                              inputRange: [offset - this.props.sliderWidth, offset + this.props.sliderWidth],\n                              outputRange: [-parallaxPadding, parallaxPadding],\n                              extrapolate: 'clamp'\n                          }) :\n                          0\n                  },\n                  {\n                      translateY: this.props.vertical ?\n                          scrollPosition.interpolate({\n                              inputRange: [offset - this.props.sliderHeight, offset + this.props.sliderHeight],\n                              outputRange: [-parallaxPadding, parallaxPadding],\n                              extrapolate: 'clamp'\n                          }) :\n                          0\n                  }\n              ] :\n              []\n      };\n\n      return (\n          <AnimatedImageComponent\n            {...other}\n            style={[styles.image, style, requiredStyles, dynamicStyles]}\n            onLoad={this._onLoad}\n            onError={status !== ParallaxImageStatus.TRANSITION_FINISHED ? this._onError : undefined} // prevent infinite-loop bug\n          />\n      );\n  }\n\n  get spinner () {\n      const { status } = this.state;\n      const { showSpinner, spinnerColor } = this.props;\n\n      return status === ParallaxImageStatus.LOADING && showSpinner ? (\n          <View style={styles.loaderContainer}>\n              <ActivityIndicator\n                size='small'\n                color={spinnerColor}\n                animating={true}\n              />\n          </View>\n      ) : (\n          false\n      );\n  }\n\n  render () {\n      const { containerStyle } = this.props;\n\n      return (\n          <View\n            ref={(c) => {\n                this._container = c;\n            }}\n            pointerEvents='none'\n            style={[containerStyle, styles.container]}\n            onLayout={this._measureLayout}\n          >\n              {this.image}\n              {this.spinner}\n          </View>\n      );\n  }\n}\n"]}